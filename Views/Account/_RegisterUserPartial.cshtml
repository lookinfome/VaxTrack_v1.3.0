@model v1Remastered.Dto.UserDetailsDto_Register

@{
    ViewBag.pageTitle = "Registration".ToUpper();
    ViewBag.pageDesc = "Join our community and fight with us";
    var signUpFailedMsg = ViewBag.SignUpFailedMsg as string;
    var currMonthYear = DateTime.Now.ToString("yyyy-MM-dd");
}

<div style="" class="row justify-content-center mt-5">
    <div class="col col-lg-6 col-md-10 col-sm-12">
        
        <!-- register page: title, description, alert message -->
        <div class="register-content text-center">
            <h3 class="register-title-content"> @ViewBag.pageTitle </h3>
            <span class="register-body-content">
                @ViewBag.pageDesc <i class="icon-handshake mx-1 fas fa-handshake"></i>
            </span>

            @if (!string.IsNullOrEmpty(signUpFailedMsg))
            {
                <div id="registrationFailMsg" class="alert alert-warning mt-2" role="alert">
                    <div class="alert"> @signUpFailedMsg </div>
                </div>
            }
        </div>

        <!-- register form: form -->
        <div style="" class="register-form">
            @using (Html.BeginForm("RegisterUser", "Account", FormMethod.Post, new { enctype = "multipart/form-data", id = "registrationForm" }))
            {
                @Html.AntiForgeryToken()

                <div class="d-flex justify-content-between mt-2">
                    @* user name *@
                    <div>
                        @Html.TextBoxFor(model => model.UserName, new { @style = "width:100%;", @class = "register-input", placeholder = "Full Name" }) <br>
                        @Html.ValidationMessageFor(model => model.UserName, null, new { @class = "validation-msg" }, null)
                    </div>

                    @* user unique id *@
                    <div class="">
                        @Html.TextBoxFor(model => model.UserUid, new { @style = "width:100%;", @class = "register-input", placeholder = "Unique Aadhar Number" }) <br>
                        @Html.ValidationMessageFor(model => model.UserUid, null, new { @class = "validation-msg" }, null)
                    </div>

                </div>

                <div class="d-flex justify-content-between mt-2">
                    
                    @* birthdate *@
                    <div class="">
                        @Html.LabelFor(model => model.UserBirthdate, "Date of Birth", new { @style = "color:white;", @class = "" })
                        @Html.TextBoxFor(model => model.UserBirthdate, new { @style = "width:100%;", type = "date", max = currMonthYear, @class = "register-input", placeholder = "mm/dd/yyyy" }) <br>
                        @Html.ValidationMessageFor(model => model.UserBirthdate, null, new { @class = "validation-msg" }, null)
                    </div>

                    @* user phone number *@
                    <div class="">
                        @Html.TextBoxFor(model => model.UserPhone, new { @style = "width:100%; margin-top: 25px;", @class = "register-input", placeholder = "Phone Number" }) <br>
                        @Html.ValidationMessageFor(model => model.UserPhone, null, new { @class = "validation-msg" }, null)
                    </div>

                    @* image *@
                    @* <div class="">
                        @Html.LabelFor(m => m.ProfilePicture, "Upload Profile Picture", new { @style = "color:white", @class = "" })
                        <input type="file" name="ProfilePicture" class="form-control register-input" /> <br>
                        @Html.ValidationMessageFor(m => m.ProfilePicture, null, new { @class = "validation-msg" }, null)
                    </div> *@
                </div>

                <div class="d-flex justify-content-between mt-2">
                    @* password *@
                    <div class="text-center">
                        @Html.PasswordFor(model => model.UserPassword, new { @style = "width:100%;", @class = "register-input", placeholder = "Password", id = "Password" }) <br>
                        <span id="passwordStrength" class="validation-msg"></span>
                        @Html.ValidationMessageFor(model => model.UserPassword, null, new { @class = "validation-msg" }, null)
                    </div>

                    @* confirm password *@
                    <div class="text-center">
                        @Html.PasswordFor(model => model.UserConfirmPassword, new { @style = "width:100%;", @class = "register-input", placeholder = "Confirm Password", id = "ConfirmPassword" }) <br>
                        @Html.ValidationMessageFor(model => model.UserConfirmPassword, null, new { @class = "validation-msg" }, null)
                    </div>
                </div>

                <div class="">

                    @* gender *@
                    <div style="color: white;" class="text-center mt-4">
                        @Html.RadioButtonFor(model => model.UserGender, "M", new { @class = "" }) Male
                        @Html.RadioButtonFor(model => model.UserGender, "F", new { @class = "mx-2" }) Female
                        @Html.RadioButtonFor(model => model.UserGender, "O", new { @class = "mx-2" }) Other
                        <br>
                        @Html.ValidationMessageFor(model => model.UserGender, null, new { @class = "validation-msg" }, null)
                    </div>

                    @* submit *@
                    <div class="text-center mt-1">
                        <button type="submit" class="mt-3 register-submit">Sign In</button>
                    </div>

                </div>

                

            }
        </div>
    </div>
</div>


@section Scripts{
    <script>
        window.onload = function() {
            setTimeout(function() {
                var welcomeMessage = document.getElementById('registrationFailMsg');
                if (welcomeMessage) {
                    welcomeMessage.style.display = 'none';
                }
            }, 5000); // 5000 milliseconds = 5 seconds
        };
    </script>
}