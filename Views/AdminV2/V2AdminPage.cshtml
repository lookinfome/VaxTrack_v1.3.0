@{
    ViewBag.pageTitle = "admin dashboard".ToUpper();
    ViewBag.pageDesc = "This page serves as a comprehensive and professional dashboard designed to provide detailed insights into our campaign to combat COVID-19.";
    
}


<div class="container admin-dash">

    @* 1st row: page title and description *@
    <div class="row justify-content-center mt-5">
        <div class="col col-lg-6 col-md-10 col-12">
            <div class="admin-desc">
                <h3 class="text-center">@ViewBag.pagetitle <i class="icon-analytics fas fa-chart-line"></i></h3>
                <p class="admin-desc-content mt-4"> 
                    @ViewBag.pageDesc 
                    <i class="icon-jet fas fa-fighter-jet"></i>
                </p>
            </div>
        </div>

    </div>

    @* 2nd row: page tabs *@
    <div class="row mt-2">
        <div>
            <button id="admin-dash-usages" class="admin-usages-btn"><i class="fas fa-tachometer-alt mx-2"></i>Usage Analytics</button>
            <button id="admin-dash-actions" class="admin-actions-btn"><i class="fas fa-pen-fancy mx-2"></i>Admin Actions</button>
            <button id="admin-dash-support" class="admin-support-btn"><i class="fas fa-envelope-open-text mx-2"></i>Support Manager</button>
        </div>
    </div>

    @* 3rd row: page content *@
    <div class="row">
        <div id="admin-dash-content">
            
        </div>
    </div>

</div>

@* 4th row: toast messages *@
<div class="row">
    @if(!string.IsNullOrEmpty(ViewBag.LoginMessage))
    {
        <div id="adminWelcomeMessage" class="toast position-fixed top-0 end-0 m-5" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header">
                <i style="color: #0E185F;" class="far fa-smile"></i> 
                <strong style="color: #0E185F;" class="me-auto mx-2">Login Attempt: Success</strong>
                @* <small>11 mins ago</small> *@
                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div class="toast-body">
                @ViewBag.LoginMessage
            </div>
        </div>
    }

</div>


@section Scripts{
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.min.js"></script>

    @* toast and alert messages *@
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var _adminWelcomeMessage = document.getElementById('adminWelcomeMessage');
            if (_adminWelcomeMessage) {
                var adminWelcomeMessage = new bootstrap.Toast(_adminWelcomeMessage);
                adminWelcomeMessage.show();
            }
        });
    </script>

    <script>
        $(document).ready(function(){

            // approve booked slots
            $(document).on('click', '.approveButton', function() {
                var userId = $(this).data('userid');
                var bookingId = $(this).data('bookingid');
                $.ajax({
                    url: '@Url.Action("ApproveSlotBook", "AdminV2")',
                    type: 'POST',
                    data: {
                        userId: userId,
                        bookingId: bookingId,
                        // __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val() // Include anti-forgery token
                    },
                    success: function(data) {
                        $('#actionApproveTable').html(data);
                    },
                    error: function(response) {
                        alert("Error approving slot booking.");
                    }
                });
            });

            // update hospital slots
            $(document).on('click', '.admin-slot-update-submit', function() {
                var hospitalId = $(this).attr('onclick').match(/\d+/)[0];
                var increaseValue = $('#increaseSlots_HOSP' + hospitalId).val();

                console.log(`hospitalID: ${hospitalId}, increaseValue: ${increaseValue}`);

                $.ajax({
                    url: '@Url.Action("UpdateSlots", "AdminV2")',
                    type: 'GET',
                    data: { 
                        hospitalId: hospitalId, 
                        increaseBy: increaseValue,              
                    },
                    success: function(data) {
                        $('#actionUpdateSlots').html(data);
                    },
                    error: function() {
                        alert("An error occurred while increasing slots.");
                    }
                });
            });

            // load usage tab
            $(document).on('click', '#admin-dash-usages', function() {
                // Extract the user ID from the URL
                var url = window.location.href;
                var userId = url.substring(url.lastIndexOf('/') + 1);

                $.ajax({
                    url: '/Admin/v2/' + userId + '/admin-usages',
                    type: 'GET',
                    success: function(data) {
                        $('#admin-dash-content').html(data);
                        var dashUsages = document.getElementById('admin-dash-usages');
                        var dashActions = document.getElementById('admin-dash-actions');
                        var dashSupport = document.getElementById('admin-dash-support');

                        dashUsages.style.background = '#9BEC00';
                        dashActions.style.background = '#FBF8EF';
                        dashSupport.style.background = '#FBF8EF';

                        // slot booking chart
                        var totalUsersCount = @ViewBag.TotalUserCount;
                        var totalUserWithSlotBookedCount = @ViewBag.TotalUserWithSlotBookedCount;
                        var totalUserWithoutSlotBookedCount = totalUsersCount - totalUserWithSlotBookedCount;

                        var ctx0 = document.getElementById('slotBookingChart').getContext('2d');
                        var slotBookingChart = new Chart(ctx0, {
                            type: 'doughnut',
                            data: {
                                labels: ['Users with slot booked', 'Users without slot booked'],
                                datasets: [{
                                    data: [totalUserWithSlotBookedCount, totalUserWithoutSlotBookedCount],
                                    backgroundColor: ['limegreen', 'orange']
                                }]
                            },
                            options: {
                                responsive: true,
                                maintainAspectRatio: false,
                                title: {
                                    display: true,
                                    text: '',
                                    fontColor: 'white'
                                },
                                legend: {
                                    labels: {
                                        fontColor: 'white'
                                    }
                                }
                            }
                        });

                        // vaccination status chart
                        var fullyVaccinatedUsersCount = @ViewBag.FullyVaccinatedUsersCount;
                        var partiallyVaccinatedUsersCount = @ViewBag.PartiallyVaccinatedUsersCount;
                        var notVaccinatedUsersCount = totalUsersCount - (fullyVaccinatedUsersCount + partiallyVaccinatedUsersCount);
                        
                        var ctx1 = document.getElementById('slotApproveChart').getContext('2d');
                        var slotApproveChart = new Chart(ctx1, {
                            type: 'doughnut',
                            data: {
                                labels: ['Fully vaccinated', 'Partially vaccinated', 'Not vaccinated'],
                                datasets: [{
                                    data: [fullyVaccinatedUsersCount, partiallyVaccinatedUsersCount, notVaccinatedUsersCount],
                                    backgroundColor: ['blue', 'yellow', 'green']
                                }]
                            },
                            options: {
                                responsive: true,
                                maintainAspectRatio: false,
                                title: {
                                    display: true,
                                    text: '',
                                    fontColor: 'white'
                                },
                                legend: {
                                    labels: {
                                        fontColor: 'white'
                                    }
                                }
                            }
                        });
                        
                        
                        // user gender chart
                        var maleUsersCount = @ViewBag.MaleUsersCount;
                        var femaleUsersCount = @ViewBag.FemaleUsersCount;
                        var otherUsersCount =  totalUsersCount - (maleUsersCount + femaleUsersCount);

                        var ctx2 = document.getElementById('userGenderChart').getContext('2d');
                        var userGenderChart = new Chart(ctx2, {
                            type: 'doughnut',
                            data: {
                                labels: ['Male', 'Female', 'Others'],
                                datasets: [{
                                    data: [maleUsersCount, femaleUsersCount, otherUsersCount],
                                    backgroundColor: ['tomato', 'seagreen', 'lightgray']
                                }]
                            },
                            options: {
                                responsive: true,
                                maintainAspectRatio: false,
                                title: {
                                    display: true,
                                    text: '',
                                    fontColor: 'white'
                                },
                                legend: {
                                    labels: {
                                        fontColor: 'white'
                                    }
                                }
                            }
                        });
                    },
                    error: function(response) {
                        alert("Error loading admin usages.");
                    }
                });
            });

            // load action tab
            $(document).on('click', '#admin-dash-actions', function() {
                // Extract the user ID from the URL
                var url = window.location.href;
                var userId = url.substring(url.lastIndexOf('/') + 1);

                $.ajax({
                    url: '/Admin/v2/' + userId + '/admin-actions',
                    type: 'GET',
                    success: function(data) {
                        $('#admin-dash-content').html(data);
                        var dashUsages = document.getElementById('admin-dash-usages');
                        var dashActions = document.getElementById('admin-dash-actions');
                        var dashSupport = document.getElementById('admin-dash-support');

                        dashActions.style.background = '#9BEC00';
                        dashSupport.style.background = '#FBF8EF';
                        dashUsages.style.background = '#FBF8EF';
                    },
                    error: function(response) {
                        alert("Error loading admin status.");
                    }
                });
            });

            // load support manager tab 
            $(document).on('click', '#admin-dash-support', function() {
                var url = window.location.href;
                var userId = url.substring(url.lastIndexOf('/') + 1);

                $.ajax({
                    url:'/SupportManager/'+userId,
                    type:'GET',
                    success: function(data) {
                        var dashUsages = document.getElementById('admin-dash-usages');
                        var dashActions = document.getElementById('admin-dash-actions');
                        var dashSupport = document.getElementById('admin-dash-support');

                        dashActions.style.background = '#FBF8EF';
                        dashUsages.style.background = '#FBF8EF';
                        dashSupport.style.background = '#9BEC00';

                        $('#admin-dash-content').html(data);
                    },
                    error:function(response) {

                    }
                });
            });
        
        });
    </script>

    @* support manager: ticket details view *@
    <script>
        $(document).ready(function() {
            $(document).on('click', '.viewTicketDetails', function() {

                // Extract the user ID from the URL
                var url = window.location.href;
                var userId = url.substring(url.lastIndexOf('/') + 1);

                // Extract the supportId value
                var supportId = $(this).data('support-id');

                // Log the extracted values
                console.log(`User ID: ${userId}`);
                console.log(`Support ID: ${supportId}`);

                // Make the AJAX call
                $.ajax({
                    url: `/SupportManager/${userId}/TicketDetails/${supportId}`,
                    type: 'GET',
                    success: function(response) {
                        console.log('AJAX call successful');
                        $('.support-manager-ticket-view').html(response);
                    },
                    error: function(xhr, status, error) {
                        // Handle error
                        console.log(`Error: ${userId}, ${supportId}, ${url}`);
                        console.log('Status:', status);
                        console.log('Error:', error);
                        console.log('Response:', xhr.responseText);
                    }
                });
            });
        });
    </script>
    
    @* support manager: add new comment *@

}